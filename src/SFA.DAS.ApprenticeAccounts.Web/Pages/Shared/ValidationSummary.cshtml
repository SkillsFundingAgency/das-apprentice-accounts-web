@using System.Text.RegularExpressions
@if (!ViewData.ModelState.IsValid)
{
    var validationOrder = ViewBag.ValidationOrder != null ? ViewBag.ValidationOrder.Split(',') : new string[] { };

    <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
        <h2 class="govuk-error-summary__title" id="error-summary-title">
            There is a problem
        </h2>
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @if (ViewContext.ViewData.ModelState.ContainsKey("MultipleErrorSummary"))
                {
                    var anchorLink = @ViewContext.ViewData["MultipleErrorAnchor"] ?? "#";
                    <li>
                        <a href="@anchorLink">@ViewContext.ViewData.ModelState["MultipleErrorSummary"].Errors[0].ErrorMessage</a>
                    </li>
                }
                else
                {
                    var regex = new Regex("z(\\d*)__Status");
                    @foreach (var stateItem in ViewContext.ViewData.ModelState.OrderBy(x => Array.IndexOf(validationOrder, x.Key)))
                    {
                        var elementId = Html.GenerateIdFromName(ViewData.TemplateInfo.GetFullHtmlFieldName(stateItem.Key)) ?? stateItem.Key;

                        if (elementId == "DateOfBirth") elementId = "DateOfBirth_Day";
                        if (regex.IsMatch(elementId)) elementId = $"preferenceRadioGroup{regex.Match(elementId).Groups[1].Value}";
                        
                        foreach (var error in stateItem.Value.Errors)
                        {
                            <li>
                                <a href="#@elementId">@error.ErrorMessage</a>
                            </li>
                        }
                    }
                }
            </ul>
        </div>
    </div>
}